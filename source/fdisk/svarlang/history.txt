20241010
- improved the MVCOMP compression algorithm (ca. 5% more efficient on text)
- added /nodef to TLUMACZ (skips deflang generation)
- MVCOMP-packed data is loaded to RAM before unpacking (60x faster on an 8086)
- assembly version of the MVCOMP depacker used by default (saves 27 bytes)

20240929
- LNG strings may be optionally MVCOMP-compressed (disabled with /nocomp)
- reference language can be excluded from the LNG file (/excref)

20240915
- fixed svarlang_strid() when id=0 and string does not exist (Bernd Boeckmann)

20240227
- replaced inline _asm by pragma aux (more compact code, open watcom only)

20230730
- dropped svarlang_autoload() (replaced by more specialized functions below)
- added svarlang_autoload_exepath() and svarlang_autoload_nlspath()
- svarlang_load() simplified so it takes the target filename as an argument
- file access relies on fopen() when svarlang is compiled with -DWITHSTDIO
- new file format: sorted dictionary for faster lookup (by Bernd Boeckmann)
  breaking change! See svarlang.txt for file format specification

20230630
- tlumacz.exe warns about empty strings (patch by Bernd Boeckmann)
- tlumacz.exe does not abort when a malformed line is found

20230629
- deflang.c has each message on a different line so it is nicer to VCSes

20230628
- added support for \e sequences in translation strings
- implemented svarlang_getver()

20220314
- added support for flagging strings as being "dirty", eg: ?1.1:Hello, World

20220309
- static lib buffer is sized to fit the largest lang block +5% of margin
  (was: twice the size of the reference language)

20220226
- replaced fopen() and friends by direct DOS calls (smaller memory footprint)
