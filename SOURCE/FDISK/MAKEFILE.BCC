# This makefile is for Free FDISK 1.3.4 and Borland C 3.1.
#
# Original makefile was written by Jim Hall 
#   for version 0.99 and Borland C 3.1.
# Modified by Brian E. Reifsnyder 
#   for version 0.99A and Borland Turbo C++ 3.0.
# Modified by Bernd Boeckmann back to Borland C 3.1.
#
# Note:  Free FDISK is written in C.

# Build via:
# > make -f makefile.bcc

# you may override the default BCC location via
#  make -f makefile.bcc -DCCBASE=D:\BC31

!if !$d(CCBASE)
CCBASE=c:\borlandc
!endif
!if !$d(CC)
CC=$(CCBASE)\bin\bcc
!endif
!if !$d(CFLAGS)
CFLAGS=-ms -g5 -w -O -Z -1
!endif

# -mx     Set Memory Model
# -gN     Stop after N warnings
# -wxxx   Warning control                                  
# -O      Optimize jumps 
# -Z      Optimize register usage
# -1      80186/286 Instructions


ECHO=ECHO
LDFLAGS= -lm -P
LDLIBS=
LD=$(CCBASE)\bin\tlink /c /m
RM=del
SRC = main.c cmd.c fdiskio.c helpscr.c kbdinput.c pdiskio.c \
      pcompute.c userint1.c userint2.c 
OBJ = main.obj cmd.obj fdiskio.obj \
helpscr.obj kbdinput.obj pdiskio.obj pcompute.obj \
ui1.obj ui2.obj bootnorm.obj booteasy.obj kitten.obj smartmbr.obj

NASM=nasm
UPX=upx


# build targets:

all: fdisk.exe test.exe

test.exe: test.c
  $(CC) -M test.c

fdisk.exe: $(OBJ)  
	$(ECHO) $(CCBASE)\lib\c0s.obj+>resp.tmp 
	$(ECHO) main cmd fdiskio +>>resp.tmp
   $(ECHO) helpscr kbdinput pdiskio pcompute +>>resp.tmp 
	$(ECHO) ui1 ui2 bootnorm booteasy smartmbr kitten  +>>resp.tmp 
	$(ECHO)  ,fdisk,, $(CCBASE)\lib\cs.lib  >>resp.tmp
	$(LD) @resp.tmp
   $(UPX) -q fdisk.exe

# compile targets:

main.obj: main.c
 $(CC) $(CFLAGS) -c main.c

cmd.obj: cmd.c
 $(CC) $(CFLAGS) -c cmd.c

fdiskio.obj: fdiskio.c
 $(CC) $(CFLAGS) -c fdiskio.c

helpscr.obj: helpscr.c
 $(CC) $(CFLAGS) -c helpscr.c

kbdinput.obj: kbdinput.c
 $(CC) $(CFLAGS) -c kbdinput.c

pdiskio.obj: pdiskio.c
 $(CC) $(CFLAGS) -c pdiskio.c

pcompute.obj: pcompute.c
 $(CC) $(CFLAGS) -c pcompute.c

ui1.obj: userint1.c
 $(CC) $(CFLAGS) -c -oui1 userint1.c

ui2.obj: userint2.c
 $(CC) $(CFLAGS) -c -oui2 userint2.c

kitten.obj: kitten.c
 $(CC) $(CFLAGS) -c kitten.c
 
bootnorm.obj: bootnorm.asm
     $(NASM) -f obj bootnorm.asm

booteasy.obj: booteasy.asm
     $(NASM) -f obj booteasy.asm

smartmbr.obj: smartmbr.asm
     $(NASM) -f obj smartmbr.asm -l smartmbr.lst
 
 

# clean up:

clean:
 $(RM) *.obj

clobber: 
 $(RM) *.bak
 $(RM) *.dsk
 $(RM) *.exe
 $(RM) *.obj
 $(RM) *.swp
 $(RM) *.tmp
